- at the moment sorting is not correct for long running commands (we append to osh files after process completes):
    - breaks invariant that files are pre-sorted
    - only noticeable for very long running commands in "fresh entries" (where timeago is still fine grained)
- bind execute command vs. insert
- look at binary formats or use my own
    - https://capnproto.org/
    - https://github.com/capnproto/capnproto-rust?tab=readme-ov-file
    x https://docs.rs/rmp-serde/latest/rmp_serde/
- understand Rust pdqsort in detail and write better benchs
    - also look into glidesort: https://github.com/orlp/glidesort
- use bind to switch between filtered and unfiltered
    - probably need a reload command (output to stdout) and bind that: `"tab:reload(osh-oxy reload --all)"`
x splitting lib up in different formats (when adding more)
x not clear which files are loaded
    x should ignores symlinks but otherwise get all osh files
    x should only ignore symlinks that point to files we are going to load anyway
x add profiling info for various parts to figure out which improvements might speed up startup time
    x sorting
    x loading file
    x ...
c support different ways of merging/sorting history search
x robust output parsing
x no value when ctrl-c
x fix search args (session-id/time filter)
x use rust native fzf library?
